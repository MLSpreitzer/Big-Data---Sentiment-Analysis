########################
## Load Packages & Data ## 
########################
library(readr)
library(doParallel)
library(plotly)
library(caret)
library(ggplot2)
library(corrplot)


## Import data
iphone_small <- read.csv("iphone_smallmatrix_labeled_8d.csv")
iphone_large <- read.csv("LargeMatrix.csv")


########################
## parallel processing ## 
########################

# Find how many cores are on your machine
detectCores() # Result = 4
# Create Cluster with desired number of cores. Don't use them all! Your computer is running other processes. 
cl <- makeCluster(2)
# Register Cluster
registerDoParallel(cl)
# Confirm how many cores are now "assigned" to R and RStudio
getDoParWorkers() # Result 2 
# Stop Cluster. After peorming your tasks, stop your cluster. 
stopCluster(cl)

#############################
## Pre-processing/Cleaning ## 
#############################

## Inspect data types
str(iphone_small)
# Iphone df contains -- 12,973 observations & -- 59 variables

# Convert iphonesentiment to factor (y output)
iphone_small$iphonesentiment <- as.factor(iphone_small$iphonesentiment)

#Verify Datatypes 
str(iphone_small$iphonesentiment)
# Factor w/ 6 levels

# Min, Med, Mean, Max
summary(iphone_small)

#List your attributes within your data set.
attributes(iphone_small)

#Names your attributes within your data set
names(iphone_small) 

#Will print out the instances within that particular column in your data set.
iphone_small$iphonesentiment 


# Missing values? 
is.na(iphone_small) #omitted 0 rows

##############
##   EDA    ##
##############

# Histogram
plot_ly(iphone_small, x= ~iphone_small$iphonesentiment, type='histogram')

# KEY: 
# 0: very negative
# 1: negative
# 2: somewhat negative
# 3: somewhat positive
# 4: positive
# 5: very positive


################
##    Model   ##
################

# model C5.0
# model rf
# model SVM
# model kknn
# model gmb

set.seed(123)


